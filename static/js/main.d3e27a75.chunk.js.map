{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","prevHandler","props","stepWidth","itemWidth","step","setState","nextHandler","images","stepLimit","length","this","frameSize","animationDuration","widthList","className","style","width","classNames","disabled","type","onClick","marginLeft","transition","map","image","src","alt","indexOf","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iQAWaA,EAAb,4MACEC,MAAe,CACbC,OAAQ,GAFZ,EAKEC,YAAc,WACZ,MAA4B,EAAKC,MAC3BC,EADN,EAAQC,UAAR,EAAmBC,KAGnB,EAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,OAAQD,EAAMC,OAASG,EAAY,EAAIJ,EAAMC,OAASG,EAAY,OAVxE,EAcEI,YAAc,WACZ,MAAoC,EAAKL,MAAjCM,EAAR,EAAQA,OAAQJ,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,KACrBF,EAAYC,EAAYC,EACxBI,GAAaL,GAAaI,EAAOE,OAASL,GAEhD,EAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,OAAQD,EAAMC,OAASG,EAAYM,EAAYV,EAAMC,OAASG,EAAYM,OApBhF,4CAwBE,WACE,MAEIE,KAAKT,MADPM,EADF,EACEA,OAAQH,EADV,EACUA,KAAMD,EADhB,EACgBA,UAAWQ,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,kBAE9Bb,EAAWW,KAAKZ,MAAhBC,OAEFc,EAAYV,EAAYQ,EACxBH,GAAaL,GAAaI,EAAOE,OAASL,GAEhD,OACE,mCACE,sBAAKU,UAAU,YAAYC,MAAO,CAAEC,MAAOH,GAA3C,UACE,wBACEC,UAAWG,IAAW,eAAgB,CAAEC,UAAWnB,IACnDoB,KAAK,SACLC,QAASV,KAAKV,YAHhB,eAQA,qBAAKc,UAAU,WAAWC,MAAO,CAAEC,MAAOH,GAA1C,SACE,oBACEC,UAAU,iBACVC,MAAO,CAAEM,WAAW,GAAD,OAAKtB,EAAL,MAAiBuB,WAAW,eAAD,OAAiBV,EAAjB,YAFhD,SAIGL,EAAOgB,KAAI,SAAAC,GAAK,OACf,6BACE,qBACEV,UAAU,sBACVW,IAAKD,EACLE,IAAI,SACJX,MAAO,CAAEC,MAAOb,MALXI,EAAOoB,QAAQH,WAW9B,wBACEV,UAAWG,IAAW,eAAgB,CAAEC,SAAUnB,IAAWS,IAC7DW,KAAK,SACLC,QAASV,KAAKJ,YAHhB,wBA7DV,GAA8BsB,IAAMC,WCH9BC,G,kNACJhC,MAAQ,CACNS,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWG,KAAKZ,MAAhBS,OAER,OACE,sBAAKO,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAd,2BAA0CP,EAAOE,OAAjD,aAEA,cAAC,EAAD,CACEF,OAAQA,EACRH,KAAM,EACNO,UAAW,EACXR,UAAW,IACXS,kBAAmB,a,GA7BXgB,IAAMC,YAoCTC,ICzCfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d3e27a75.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { CarouselType } from '../types/CarouselType';\nimport './Carousel.scss';\n\ntype Props = CarouselType;\n\ntype State = {\n  scroll: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: State = {\n    scroll: 0,\n  };\n\n  prevHandler = () => {\n    const { itemWidth, step } = this.props;\n    const stepWidth = itemWidth * step;\n\n    this.setState((state) => ({\n      scroll: state.scroll + stepWidth < 0 ? state.scroll + stepWidth : 0,\n    }));\n  };\n\n  nextHandler = () => {\n    const { images, itemWidth, step } = this.props;\n    const stepWidth = itemWidth * step;\n    const stepLimit = -itemWidth * (images.length - step);\n\n    this.setState((state) => ({\n      scroll: state.scroll - stepWidth > stepLimit ? state.scroll - stepWidth : stepLimit,\n    }));\n  };\n\n  render() {\n    const {\n      images, step, itemWidth, frameSize, animationDuration,\n    } = this.props;\n    const { scroll } = this.state;\n\n    const widthList = itemWidth * frameSize;\n    const stepLimit = -itemWidth * (images.length - step);\n\n    return (\n      <>\n        <div className=\"container\" style={{ width: widthList }}>\n          <button\n            className={classNames('btn btn-prev', { disabled: !scroll })}\n            type=\"button\"\n            onClick={this.prevHandler}\n          >\n            -\n          </button>\n\n          <div className=\"carousel\" style={{ width: widthList }}>\n            <ul\n              className=\"carousel__list\"\n              style={{ marginLeft: `${scroll}px`, transition: `margin-left ${animationDuration}ms ease` }}\n            >\n              {images.map(image => (\n                <li key={images.indexOf(image)}>\n                  <img\n                    className=\"carousel__list-item\"\n                    src={image}\n                    alt=\"smiley\"\n                    style={{ width: itemWidth }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n          <button\n            className={classNames('btn btn-next', { disabled: scroll === stepLimit })}\n            type=\"button\"\n            onClick={this.nextHandler}\n          >\n            +\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Carousel } from './components/Carousel';\nimport './App.scss';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}