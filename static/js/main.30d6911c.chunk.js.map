{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemWidth","animationDuration","scroll","prevHandler","stepWidth","setState","nextHandler","images","props","stepLimit","length","chooseStep","e","target","value","chooseFrameSize","chooseItemWidth","chooseAnimationDuration","this","widthList","className","style","width","classNames","disabled","type","onClick","marginLeft","transition","map","image","src","alt","indexOf","htmlFor","id","min","max","onChange","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d6911c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { CarouselType } from '../types/CarouselType';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = CarouselType;\n\nexport class Carousel extends React.Component<Props, State> {\n  state: State = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    scroll: 0,\n  };\n\n  prevHandler = () => {\n    const { itemWidth, step } = this.state;\n    const stepWidth = itemWidth * step;\n\n    this.setState((state) => ({\n      scroll: state.scroll + stepWidth < 0 ? state.scroll + stepWidth : 0,\n    }));\n  };\n\n  nextHandler = () => {\n    const { itemWidth, step } = this.state;\n    const { images } = this.props;\n    const stepWidth = itemWidth * step;\n    const stepLimit = -itemWidth * (images.length - step);\n\n    this.setState((state) => ({\n      scroll: state.scroll - stepWidth > stepLimit ? state.scroll - stepWidth : stepLimit,\n    }));\n  };\n\n  chooseStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  chooseFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +e.target.value });\n  };\n\n  chooseItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  chooseAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      step, itemWidth, frameSize, animationDuration, scroll,\n    } = this.state;\n\n    const widthList = itemWidth * frameSize;\n    const stepLimit = -itemWidth * (images.length - step);\n\n    return (\n      <>\n        <div className=\"container\" style={{ width: widthList }}>\n          <button\n            className={classNames('btn btn-prev', { disabled: !scroll })}\n            type=\"button\"\n            onClick={this.prevHandler}\n          >\n            -\n          </button>\n\n          <div className=\"carousel\" style={{ width: widthList }}>\n            <ul\n              className=\"carousel__list\"\n              style={{ marginLeft: `${scroll}px`, transition: `margin-left ${animationDuration}ms ease` }}\n            >\n              {images.map(image => (\n                <li key={images.indexOf(image)}>\n                  <img\n                    className=\"carousel__list-item\"\n                    src={image}\n                    alt=\"smiley\"\n                    style={{ width: itemWidth }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <button\n            className={classNames('btn btn-next', { disabled: scroll === stepLimit })}\n            type=\"button\"\n            onClick={this.nextHandler}\n          >\n            +\n          </button>\n        </div>\n\n        <div className=\"display\">\n          <label\n            htmlFor=\"inputId\"\n            className=\"display__label\"\n          >\n            Step:\n            <input\n              type=\"number\"\n              id=\"inputId\"\n              className=\"display__input\"\n              min={1}\n              max={10}\n              value={step}\n              onChange={this.chooseStep}\n            />\n          </label>\n\n          <label\n            htmlFor=\"inputId\"\n            className=\"display__label\"\n          >\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"inputId\"\n              className=\"display__input\"\n              min={1}\n              max={10}\n              value={frameSize}\n              onChange={this.chooseFrameSize}\n            />\n          </label>\n\n          <label\n            htmlFor=\"inputId\"\n            className=\"display__label\"\n          >\n            Item width:\n            <input\n              type=\"number\"\n              id=\"inputId\"\n              className=\"display__input\"\n              max={400}\n              value={itemWidth}\n              onChange={this.chooseItemWidth}\n            />\n          </label>\n\n          <label\n            htmlFor=\"inputId\"\n            className=\"display__label\"\n          >\n            Animation Duration:\n            <input\n              type=\"number\"\n              id=\"inputId\"\n              className=\"display__input\"\n              value={animationDuration}\n              onChange={this.chooseAnimationDuration}\n            />\n          </label>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Carousel } from './components/Carousel';\nimport './App.scss';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}